name: fgl
version: 5.5.1.0
cabal-version: >=1.10
build-type: Simple
license: BSD3
license-file: LICENSE
maintainer: Ivan.Miljenovic@gmail.com
synopsis: Martin Erwig's Functional Graph Library
description: An inductive representation of manipulating graph data structures.
             .
             Original website can be found at <http://web.engr.oregonstate.edu/~erwig/fgl/haskell>.
category: Data Structures, Graphs
author: Martin Erwig, Ivan Lazar Miljenovic
data-dir: ""
extra-source-files: ChangeLog

source-repository head
    type: git
    location: git://github.com/haskell/fgl.git

library
    build-depends: base <5, transformers -any, containers -any,
                   array -any, deepseq >=1.1.0.0 && <1.5.0.0

    if (impl(ghc >=7.2) && impl(ghc <7.6))
        build-depends: ghc-prim -any
        exposed: True
        buildable: True
    exposed-modules: Data.Graph.Inductive.Internal.Heap
                     Data.Graph.Inductive.Internal.Queue
                     Data.Graph.Inductive.Internal.RootPath
                     Data.Graph.Inductive.Internal.Thread Data.Graph.Inductive.Basic
                     Data.Graph.Inductive.Example Data.Graph.Inductive.Graph
                     Data.Graph.Inductive.Monad Data.Graph.Inductive.NodeMap
                     Data.Graph.Inductive.PatriciaTree Data.Graph.Inductive.Query
                     Data.Graph.Inductive.Tree Data.Graph.Inductive.Monad.IOArray
                     Data.Graph.Inductive.Query.ArtPoint Data.Graph.Inductive.Query.BCC
                     Data.Graph.Inductive.Query.BFS Data.Graph.Inductive.Query.DFS
                     Data.Graph.Inductive.Query.Dominators
                     Data.Graph.Inductive.Query.GVD Data.Graph.Inductive.Query.Indep
                     Data.Graph.Inductive.Query.MST Data.Graph.Inductive.Query.MaxFlow
                     Data.Graph.Inductive.Query.MaxFlow2
                     Data.Graph.Inductive.Query.Monad Data.Graph.Inductive.Query.SP
                     Data.Graph.Inductive.Query.TransClos Data.Graph.Inductive
                     Data.Graph.Inductive.Generic.Graph
    exposed: True
    buildable: True
    default-language: Haskell98
    other-modules: Paths_fgl
    ghc-options: -Wall

test-suite fgl-tests
    build-depends: fgl -any, base -any, QuickCheck >=2.3 && <2.9,
                   hspec ==2.1.*, containers -any
    type: exitcode-stdio-1.0
    main-is: TestSuite.hs
    buildable: True
    default-language: Haskell98
    hs-source-dirs: test fgl-arbitrary
    other-modules: Data.Graph.Inductive.Arbitrary
                   Data.Graph.Inductive.Proxy Data.Graph.Inductive.Properties
    ghc-prof-options: -prof -auto
    ghc-options: -Wall

